#!/bin/bash
# This script automatically updates a route53 nameserver to match an EC2 instance public ip
# Meant to be run inside an EC2 instance
# The EC2 instance must have the following tags:
# AUTO_DNS_ZONE - route53 zone id 
# AUTO_DNS_NAME - route53 zone subdomain name

# Save instance metadata
export TOKEN=$(curl -X PUT -H "X-aws-ec2-metadata-token-ttl-seconds: 300" http://169.254.169.254/latest/api/token)
INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id/ -H "X-aws-ec2-metadata-token: $TOKEN")
AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone/ -H "X-aws-ec2-metadata-token: $TOKEN")
MY_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4/ -H "X-aws-ec2-metadata-token: $TOKEN")
# Get tags of that instance
ZONE_TAG=$(aws ec2 describe-tags --region ${AZ::-1} --filters "Name=resource-id,Values=${INSTANCE_ID}" --query 'Tags[?Key==`AUTO_DNS_ZONE`].Value' --output text)
NAME_TAG=$(aws ec2 describe-tags --region ${AZ::-1} --filters "Name=resource-id,Values=${INSTANCE_ID}" --query 'Tags[?Key==`AUTO_DNS_NAME`].Value' --output text)
# Update route53 nameserver
aws route53 change-resource-record-sets --hosted-zone-id $ZONE_TAG --change-batch '{"Changes":[{"Action":"UPSERT","ResourceRecordSet":{"Name":"'$NAME_TAG'","Type":"A","TTL":300,"ResourceRecords":[{"Value":"'$MY_IP'"}]}}]}'

